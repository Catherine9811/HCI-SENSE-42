<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="False" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="True" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1536, 960]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="white" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="explorer" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="True" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="definition">
      <RoutineSettingsComponent name="definition" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="definition" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="global_code" plugin="None">
        <Param val="import re&amp;#10;from faker import Faker&amp;#10;&amp;#10;fake = Faker([&quot;en_US&quot;], use_weighting=True)&amp;#10;&amp;#10;personalized_settings = {&amp;#10;    &quot;typing_speed&quot;: 3.13, # characters per seconds&amp;#10;}" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="FONT_SIZE = 0.1&amp;#10;&amp;#10;class Stylizer:&amp;#10;    STYLES = [&quot;windows&quot;, &quot;mac&quot;]&amp;#10;    predefined_style = None&amp;#10;    current_style = None&amp;#10;    &amp;#10;    def __init__(self, style=None):&amp;#10;        self.predefined_style = style&amp;#10;        self.reset(style)&amp;#10;        &amp;#10;    def log(self):&amp;#10;        thisExp.addData(&quot;operating_system_style&quot;, self.current_style)&amp;#10;            &amp;#10;    def reset(self, style=None):&amp;#10;        if self.predefined_style is not None:&amp;#10;            self.current_style = self.predefined_style&amp;#10;        elif style is None or style not in self.STYLES:&amp;#10;            self.current_style = np.random.choice(self.STYLES)&amp;#10;        else:&amp;#10;            self.current_style = style&amp;#10;&amp;#10;class Component:&amp;#10;    def __init__(self):&amp;#10;        self.COMPONENTS = []&amp;#10;        &amp;#10;    def hide(self):&amp;#10;        for component in self.COMPONENTS:&amp;#10;            component.setAutoDraw(False)&amp;#10;    &amp;#10;    def show(self):&amp;#10;        for component in self.COMPONENTS:&amp;#10;            component.setAutoDraw(True)&amp;#10;            component.draw()&amp;#10;&amp;#10;class TaskBar(Component):&amp;#10;    ICON_SIZE = 0.1&amp;#10;    ICON_SIZE_PRESSED = 0.09&amp;#10;    ICON_GAP = 0.005&amp;#10;    BAR_SIZE = 0.1&amp;#10;    FONT_SIZE = 0.1&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    ICONS = {&amp;#10;        &quot;File Manager&quot;: &quot;resources/{}/explorer.png&quot;,&amp;#10;        &quot;Browser&quot;: &quot;resources/{}/network.png&quot;,&amp;#10;        &quot;Mail&quot;: &quot;resources/{}/mail.png&quot;,&amp;#10;        &quot;Document&quot;: &quot;resources/{}/notes.png&quot;,&amp;#10;        &quot;Trash&quot;: &quot;resources/{}/trash_full.png&quot;,&amp;#10;    }&amp;#10;    HOME = 'resources/{}/homescreen.png'&amp;#10;    TASKBAR = 'resources/{}/taskbar.png'&amp;#10;    HIGHLIGHT = 'resources/{}/highlight.png'&amp;#10;    &amp;#10;    icon_objects = []&amp;#10;    highlight_object = None&amp;#10;    target_name = None&amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    &amp;#10;    def __init__(self, style, target=None):&amp;#10;        super().__init__()&amp;#10;        self.style = style&amp;#10;        self.allocate_target(index=target)&amp;#10;        self.draw_interface()&amp;#10;    &amp;#10;    def update(self):&amp;#10;        self.updateHighlight()&amp;#10;        return self.updateStatus()&amp;#10;        &amp;#10;    def allocate_target(self, index=None):&amp;#10;        if index is None or index &gt;= len(self.ICONS):&amp;#10;            self.target_name = np.random.choice(list(self.ICONS.keys()))&amp;#10;        else:&amp;#10;            self.target_name = list(self.ICONS.keys())[index]&amp;#10;&amp;#10;    def get_taskbar_icon_at(self, i):&amp;#10;        relative_location = i - len(self.ICONS) / 2&amp;#10;        relative_sign = np.sign(relative_location)&amp;#10;        absolute_location = np.abs(relative_location)&amp;#10;        return ((self.ICON_GAP + self.ICON_SIZE / self.ASPECT_RATIO) * relative_location, -1.0 + self.BAR_SIZE / 2)&amp;#10;    &amp;#10;    def reset(self):&amp;#10;        style = self.style.current_style&amp;#10;        for component in self.COMPONENTS:&amp;#10;            if isinstance(component, visual.ImageStim):&amp;#10;                component.setImage(component.name.format(style))&amp;#10;                &amp;#10;    def set_trash_empty(self):&amp;#10;        for component in self.COMPONENTS:&amp;#10;            if component.name == self.ICONS[&quot;Trash&quot;]:&amp;#10;                component.setImage(component.image.replace(&quot;full&quot;, &quot;empty&quot;))&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        style = self.style.current_style&amp;#10;        bg_image = visual.ImageStim(&amp;#10;            win=win,&amp;#10;            name=self.HOME, &amp;#10;            units='norm', &amp;#10;            image=self.HOME.format(style), anchor='center',&amp;#10;            pos=(0, -1 / 2 * self.FONT_SIZE), size=(2.0, 2.0 - self.FONT_SIZE),&amp;#10;            interpolate=True)&amp;#10;        bg_image.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bg_image)&amp;#10;        task_bar = visual.ImageStim(&amp;#10;            win=win,&amp;#10;            name=self.TASKBAR,&amp;#10;            units=&quot;norm&quot;,&amp;#10;            image=self.TASKBAR.format(style),&amp;#10;            opacity=1.0,&amp;#10;            size=(2.0, self.BAR_SIZE + 0.005),&amp;#10;            pos=(0, -1.0),&amp;#10;            anchor=&quot;bottom-center&quot;&amp;#10;        )&amp;#10;        task_bar.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(task_bar)&amp;#10;        self.highlight_object = visual.ImageStim(&amp;#10;            win=win,&amp;#10;            name=self.HIGHLIGHT, &amp;#10;            units='norm', &amp;#10;            image=self.HIGHLIGHT.format(style), anchor='center',&amp;#10;            pos=(0, 2.0), size=(self.ICON_SIZE / self.ASPECT_RATIO, self.ICON_SIZE),&amp;#10;            interpolate=True, opacity=0.1)&amp;#10;        self.highlight_object.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.highlight_object)&amp;#10;        for index, icon_resource in enumerate(self.ICONS.values()):&amp;#10;            icon = visual.ImageStim(&amp;#10;                win=win,&amp;#10;                name=icon_resource, &amp;#10;                units='norm', &amp;#10;                image=icon_resource.format(style), anchor='center',&amp;#10;                pos=self.get_taskbar_icon_at(index + 1), size=(self.ICON_SIZE / self.ASPECT_RATIO, self.ICON_SIZE),&amp;#10;                interpolate=True)&amp;#10;            self.icon_objects.append(icon)&amp;#10;            icon.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(icon)&amp;#10;        pass&amp;#10;&amp;#10;    def updateHighlight(self):&amp;#10;        if self.highlight_object is None:&amp;#10;            return&amp;#10;        for element in self.icon_objects:&amp;#10;            if element.contains(self.mouse.getPos()):&amp;#10;                self.highlight_object.setPos(element.pos)&amp;#10;                return&amp;#10;        self.highlight_object.setPos((0, 1.0))&amp;#10;        return&amp;#10;    &amp;#10;    def updateStatus(self):&amp;#10;        for element, element_name in zip(self.icon_objects, self.ICONS.keys()):&amp;#10;            if self.mouse.isPressedIn(element):&amp;#10;                element.setSize((self.ICON_SIZE_PRESSED / self.ASPECT_RATIO, self.ICON_SIZE_PRESSED))&amp;#10;                if element_name == self.target_name:&amp;#10;                    return False&amp;#10;            else:&amp;#10;                element.setSize((self.ICON_SIZE / self.ASPECT_RATIO, self.ICON_SIZE))&amp;#10;        return True&amp;#10;        &amp;#10;class BaseWindow(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    NAME = &quot;Window&quot;&amp;#10;    TOOLS = {&amp;#10;        &quot;windows&quot;: {&amp;#10;            &quot;Close&quot;: &quot;resources/windows/close.png&quot;,&amp;#10;            &quot;Maximize&quot;: &quot;resources/windows/max.png&quot;,&amp;#10;            &quot;Minimize&quot;: &quot;resources/windows/min.png&quot;,&amp;#10;        },&amp;#10;        &quot;mac&quot;: {&amp;#10;            &quot;Close&quot;: &quot;resources/mac/close.png&quot;,&amp;#10;            &quot;Minimize&quot;: &quot;resources/mac/min.png&quot;,&amp;#10;            &quot;Maximize&quot;: &quot;resources/mac/max.png&quot;,&amp;#10;        }&amp;#10;    }&amp;#10;    TOOLS_HIGHLIGHT = {&amp;#10;        &quot;windows&quot;: {&amp;#10;            &quot;Close&quot;: &quot;resources/windows/close_highlight.png&quot;,&amp;#10;            &quot;Maximize&quot;: &quot;resources/windows/max_highlight.png&quot;,&amp;#10;            &quot;Minimize&quot;: &quot;resources/windows/min_highlight.png&quot;,&amp;#10;        },&amp;#10;        &quot;mac&quot;: {&amp;#10;            &quot;Close&quot;: &quot;resources/mac/close_highlight.png&quot;,&amp;#10;            &quot;Minimize&quot;: &quot;resources/mac/min_highlight.png&quot;,&amp;#10;            &quot;Maximize&quot;: &quot;resources/mac/max_highlight.png&quot;,&amp;#10;        }&amp;#10;    }&amp;#10;    &amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    objects = {}&amp;#10;    &amp;#10;    def __init__(self, style):&amp;#10;        super().__init__()&amp;#10;        self.style = style&amp;#10;        self.allocate_target()&amp;#10;        self.draw_interface()&amp;#10;        &amp;#10;    def update(self):&amp;#10;        return self.updateHighlight()&amp;#10;    &amp;#10;    def log(self):&amp;#10;        thisExp.addData(&quot;window_close_target_name&quot;, self.target_name)&amp;#10;        &amp;#10;    def update_title(self, name):&amp;#10;        self.NAME = name&amp;#10;        self.title.text = name&amp;#10;        &amp;#10;    def allocate_target(self, index=None):&amp;#10;        if index is None or index &gt;= len(self.TOOLS[self.style.current_style]):&amp;#10;            self.target_name = np.random.choice([&quot;Close&quot;, &quot;Minimize&quot;])&amp;#10;        else:&amp;#10;            self.target_name = list(self.TOOLS[self.style.current_style].keys())[index]&amp;#10;    &amp;#10;    def reset(self):&amp;#10;        style = self.style.current_style&amp;#10;        self.title.alignment = self.calculate_title_layout(style)&amp;#10;        for element_name, element_tuple in self.objects.items():&amp;#10;            for element, definition in zip(element_tuple, [self.TOOLS, self.TOOLS_HIGHLIGHT]):&amp;#10;                element.setImage(definition[style][element_name])&amp;#10;                index = list(definition[style].keys()).index(element_name)&amp;#10;                param_dict = self.calculate_tool_layout(index, style)&amp;#10;                for key, value in param_dict.items():&amp;#10;                    setattr(element, key, value)&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        style = self.style.current_style&amp;#10;        bg_window = visual.Rect(&amp;#10;            win=win,&amp;#10;            name=&quot;base_window&quot;, &amp;#10;            units='norm',&amp;#10;            fillColor=[0.8824, 0.8824, 0.8824], opacity=0.96, anchor='top-center',&amp;#10;            pos=(0, 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE), size=(2.0, 2.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.BAR_SIZE),&amp;#10;            interpolate=True)&amp;#10;        bg_window.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bg_window)&amp;#10;        bg_toolbar = visual.Rect(&amp;#10;            win=win,&amp;#10;            name=&quot;base_toolbar&quot;, &amp;#10;            units='norm',&amp;#10;            fillColor=&quot;lightgray&quot;, opacity=1.0, anchor='top-center',&amp;#10;            pos=(0, 1.0 - self.FONT_SIZE), size=(2.0, self.TOOLBAR_SIZE),&amp;#10;            interpolate=True)&amp;#10;        bg_toolbar.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bg_toolbar)&amp;#10;        self.title = visual.TextBox2(&amp;#10;             win, text=self.NAME, font='Open Sans',&amp;#10;             pos=(-1.0 + self.FONT_SIZE / 4, 1.0 - self.FONT_SIZE), units='norm', letterHeight=self.FONT_SIZE / 2,&amp;#10;             size=(2.0 - self.FONT_SIZE / 2, self.TOOLBAR_SIZE), borderWidth=2.0,&amp;#10;             color='black', colorSpace='rgb',&amp;#10;             opacity=None, bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.0, alignment=self.calculate_title_layout(style),&amp;#10;             anchor='top-left', overflow='visible',&amp;#10;             fillColor=None, borderColor=None,&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='base_window_title', &amp;#10;             autoLog=False&amp;#10;        )&amp;#10;        self.title.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.title)&amp;#10;        for index, (tool_name, tool_resource, tool_highlight_resource) in enumerate(zip(self.TOOLS[style].keys(), self.TOOLS[style].values(), self.TOOLS_HIGHLIGHT[style].values())):&amp;#10;            icon = visual.ImageStim(&amp;#10;                win=win,&amp;#10;                name=tool_name, &amp;#10;                units='norm', &amp;#10;                image=tool_resource, size=(self.BAR_SIZE / self.ASPECT_RATIO, self.BAR_SIZE),&amp;#10;                interpolate=True,&amp;#10;                **self.calculate_tool_layout(index, style))&amp;#10;            icon.setAutoDraw(True)&amp;#10;            icon_highlight = visual.ImageStim(&amp;#10;                win=win,&amp;#10;                name=f&quot;{tool_name}_highlight&quot;, &amp;#10;                units='norm', &amp;#10;                image=tool_highlight_resource, size=(self.BAR_SIZE / self.ASPECT_RATIO, self.BAR_SIZE),&amp;#10;                interpolate=True, opacity=0.0,&amp;#10;                **self.calculate_tool_layout(index, style))&amp;#10;            icon_highlight.setAutoDraw(True)&amp;#10;            self.objects[tool_name] = (icon, icon_highlight)&amp;#10;            self.COMPONENTS.append(icon)&amp;#10;            self.COMPONENTS.append(icon_highlight)&amp;#10;    pass&amp;#10;    &amp;#10;    def calculate_tool_layout(self, index, style):&amp;#10;        params = {}&amp;#10;        if style == &quot;windows&quot;:&amp;#10;            params[&quot;anchor&quot;] = 'top-right'&amp;#10;            params[&quot;pos&quot;] = (1.0 - index * self.BAR_SIZE / self.ASPECT_RATIO, 1.0 - self.FONT_SIZE)&amp;#10;        else:&amp;#10;            params[&quot;anchor&quot;] = 'top-left'&amp;#10;            params[&quot;pos&quot;] = (-1.0 + index * self.BAR_SIZE / self.ASPECT_RATIO, 1.0 - self.FONT_SIZE)&amp;#10;        return params&amp;#10;        &amp;#10;    def calculate_title_layout(self, style):&amp;#10;        if style == &quot;windows&quot;:&amp;#10;            return 'center-left'&amp;#10;        return 'center'&amp;#10;    &amp;#10;    def updateHighlight(self):&amp;#10;        for element_name, element_tuple in self.objects.items():&amp;#10;            element = element_tuple[1]&amp;#10;            if element.contains(self.mouse.getPos()):&amp;#10;                element.opacity = 1.0&amp;#10;            else:&amp;#10;                element.opacity = 0.0&amp;#10;            if self.mouse.isPressedIn(element) and element_name == self.target_name:&amp;#10;                return False&amp;#10;        return True&amp;#10;&amp;#10;&amp;#10;class FormOverlay(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    SEARCHBAR_SIZE = 0.1&amp;#10;    SLIDER_SIZE = 0.1&amp;#10;    SLIDER_WIDTH = 1.4&amp;#10;    LABEL_WIDTH = 2.0&amp;#10;    BUTTON_WIDTH = 0.2&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    SLIDERS = []&amp;#10;    HINTS = []&amp;#10;    &amp;#10;    current_index = 0&amp;#10;    order = []&amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    &amp;#10;    def __init__(self, random=False):&amp;#10;        super().__init__()&amp;#10;        self.random = random&amp;#10;        self.draw_interface()&amp;#10;        self.randomize_order()&amp;#10;        &amp;#10;    def randomize_order(self):&amp;#10;        self.order = list(range(len(self.SLIDERS)))&amp;#10;        if self.random:&amp;#10;            np.random.shuffle(self.order)&amp;#10;        &amp;#10;    def update(self):&amp;#10;        display_index = self.order[self.current_index]&amp;#10;        if self.mouse.isPressedIn(self.next_button) and self.SLIDERS[display_index].getRating() is not None:&amp;#10;            self.current_index += 1&amp;#10;            if self.current_index &gt;= len(self.SLIDERS):&amp;#10;                self.current_index = 0&amp;#10;                return False  # End of the form&amp;#10;        self.update_interface()  # Show next hint/slider&amp;#10;        return True&amp;#10;        &amp;#10;    def log(self):&amp;#10;        for slider_component in self.SLIDERS:&amp;#10;            thisExp.addData(slider_component.name, slider_component.getRating())&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        self.current_index = 0&amp;#10;        for slider_component in self.SLIDERS:&amp;#10;            slider_component.reset()&amp;#10;        self.randomize_order()&amp;#10;        self.update_interface()&amp;#10;    &amp;#10;    def update_interface(self):&amp;#10;        display_index = self.order[self.current_index]&amp;#10;        for index, (hint, slider) in enumerate(zip(self.HINTS, self.SLIDERS)):&amp;#10;            if index == display_index:&amp;#10;                hint.setAutoDraw(True)&amp;#10;                hint.draw()&amp;#10;                slider.setAutoDraw(True)&amp;#10;                slider.draw()&amp;#10;            else:&amp;#10;                hint.setAutoDraw(False)&amp;#10;                slider.setAutoDraw(False)&amp;#10;        if self.current_index == len(self.SLIDERS) - 1:&amp;#10;            self.next_button.text = &quot;Finish&quot;&amp;#10;        else:&amp;#10;            self.next_button.text = &quot;Next&quot;&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        self.next_button = visual.TextBox2(win, text='Next', pos=(0, -0.3), font='Open Sans',&amp;#10;                 units='norm', color='black', letterHeight=self.FONT_SIZE / 2,&amp;#10;                 size=(self.BUTTON_WIDTH, self.SLIDER_SIZE), alignment='center',&amp;#10;                 anchor='top-center', borderWidth=1.0, borderColor=&quot;black&quot;)&amp;#10;        self.next_button.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.next_button)&amp;#10;        texts = [&amp;#10;            &quot;Sleepiness: How sleepy are you?&quot;,&amp;#10;            &quot;Mental Demand: How mentally demanding was the task?&quot;,&amp;#10;            #&quot;Physical Demand: How physically demanding was the task?&quot;,&amp;#10;            &quot;Temporal Demand: How hurried or rushed was the pace of the task?&quot;,&amp;#10;            &quot;Performance: How successful were you in accomplishing what you were asked to do?&quot;,&amp;#10;            &quot;Effort: How hard did you have to work to accomplish your level of performance?&quot;,&amp;#10;            &quot;Frustration: How insecure, discouraged, irritated, stressed, and annoyed were you?&quot;&amp;#10;        ]&amp;#10;        labels = [&amp;#10;            [&quot;extremely alert&quot;, &quot;&quot;, &quot;alert&quot;, &quot;&quot;, &quot;neither alert nor sleepy&quot;, &quot;&quot;, &quot;sleepy&quot;, &quot;&quot;, &quot;very sleepy&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            #[&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            [&quot;very slow&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very fast&quot;],&amp;#10;            [&quot;failure&quot;, &quot;&quot;, &quot;&quot;, &quot;okay&quot;, &quot;&quot;, &quot;&quot;, &quot;perfect&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;        ]&amp;#10;        ticks = [&amp;#10;            (1, 2, 3, 4, 5, 6, 7, 8, 9),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            #(1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7)&amp;#10;        ]&amp;#10;        for hint, label, tick in zip(&amp;#10;            texts, labels, ticks&amp;#10;        ):&amp;#10;            hint_text = visual.TextBox2(&amp;#10;                 win, text=hint, font='Open Sans',&amp;#10;                 pos=(0, 0.2), units='norm', letterHeight=self.FONT_SIZE / 1.5,&amp;#10;                 size=(self.LABEL_WIDTH, self.SLIDER_SIZE), borderWidth=0.0,&amp;#10;                 color='black', colorSpace='rgb',&amp;#10;                 opacity=None, bold=False, italic=False,&amp;#10;                 lineSpacing=1.0, speechPoint=None,&amp;#10;                 padding=0.0, alignment='center',&amp;#10;                 anchor='top-center', overflow='visible',&amp;#10;                 fillColor=None, borderColor=None,&amp;#10;                 flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;                 editable=False,&amp;#10;                 name=hint.lower().replace(&quot; &quot;, &quot;_&quot;).replace(&quot;,&quot;, &quot;_&quot;).replace(&quot;?&quot;, &quot;&quot;), &amp;#10;                 autoLog=False&amp;#10;            )&amp;#10;            hint_text.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(hint_text)&amp;#10;            self.HINTS.append(hint_text)&amp;#10;            slider = visual.Slider(win=win, name=hint.lower().replace(&quot; &quot;, &quot;_&quot;).replace(&quot;,&quot;, &quot;_&quot;).replace(&quot;?&quot;, &quot;_slider&quot;),&amp;#10;                startValue=None, size=(self.SLIDER_WIDTH, self.SLIDER_SIZE), pos=(0, 0.2 - self.SLIDER_SIZE * 2), units='norm',&amp;#10;                labels=label, &amp;#10;                ticks=tick, &amp;#10;                granularity=1,&amp;#10;                style='rating', styleTweaks=('triangleMarker',), opacity=None,&amp;#10;                labelColor='black', markerColor='Red', lineColor='darkgrey', colorSpace='rgb',&amp;#10;                font='Open Sans', labelHeight=self.FONT_SIZE / 3,&amp;#10;                flip=False, ori=0.0, readOnly=False)&amp;#10;            slider.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(slider)&amp;#10;            self.SLIDERS.append(slider)&amp;#10;&amp;#10;&amp;#10;class FormOverlayDeprecated(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    SEARCHBAR_SIZE = 0.1&amp;#10;    SLIDER_SIZE = 0.06&amp;#10;    SLIDER_WIDTH = 1.6&amp;#10;    LABEL_WIDTH = 2.0&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    SLIDERS = []&amp;#10;    HINTS = []&amp;#10;    &amp;#10;    &amp;#10;    def __init__(self, random=False):&amp;#10;        super().__init__()&amp;#10;        self.random = random&amp;#10;        self.draw_interface()&amp;#10;        &amp;#10;    def update(self):&amp;#10;        for slider_component in self.SLIDERS:&amp;#10;            if slider_component.getRating() is None:&amp;#10;                return True&amp;#10;        return False&amp;#10;        &amp;#10;    def log(self):&amp;#10;        for slider_component in self.SLIDERS:&amp;#10;            thisExp.addData(slider_component.name, slider_component.getRating())&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        for slider_component in self.SLIDERS:&amp;#10;            slider_component.reset()&amp;#10;        if self.random:&amp;#10;            upper_bound = 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE * 2&amp;#10;            lower_bound = -1.0 + self.BAR_SIZE&amp;#10;            locations = np.linspace(upper_bound, lower_bound, len(self.SLIDERS) + 1)[:len(self.SLIDERS)]&amp;#10;            if self.random:&amp;#10;                locations = np.random.permutation(locations)&amp;#10;            for hint, slider, location in zip(self.HINTS, self.SLIDERS, locations):&amp;#10;                hint.pos = (0, location)&amp;#10;                slider.pos = (0, location - self.SLIDER_SIZE * 2)&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        upper_bound = 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE * 2&amp;#10;        lower_bound = -1.0 + self.BAR_SIZE&amp;#10;        texts = [&amp;#10;            &quot;Sleepiness: How sleepy are you?&quot;,&amp;#10;            &quot;Mental Demand: How mentally demanding was the task?&quot;,&amp;#10;            &quot;Physical Demand: How physically demanding was the task?&quot;,&amp;#10;            &quot;Temporal Demand: How hurried or rushed was the pace of the task?&quot;,&amp;#10;            &quot;Performance: How successful were you in accomplishing what you were asked to do?&quot;,&amp;#10;            &quot;Effort: How hard did you have to work to accomplish your level of performance?&quot;,&amp;#10;            &quot;Frustration: How insecure, discouraged, irritated, stressed, and annoyed were you?&quot;&amp;#10;        ]&amp;#10;        labels = [&amp;#10;            [&quot;extremely alert&quot;, &quot;&quot;, &quot;alert&quot;, &quot;&quot;, &quot;neither alert nor sleepy&quot;, &quot;&quot;, &quot;sleepy&quot;, &quot;&quot;, &quot;very sleepy&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            [&quot;very slow&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very fast&quot;],&amp;#10;            [&quot;failure&quot;, &quot;&quot;, &quot;&quot;, &quot;okay&quot;, &quot;&quot;, &quot;&quot;, &quot;perfect&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;            [&quot;very low&quot;, &quot;&quot;, &quot;&quot;, &quot;medium&quot;, &quot;&quot;, &quot;&quot;, &quot;very high&quot;],&amp;#10;        ]&amp;#10;        ticks = [&amp;#10;            (1, 2, 3, 4, 5, 6, 7, 8, 9),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7),&amp;#10;            (1, 2, 3, 4, 5, 6, 7)&amp;#10;        ]&amp;#10;        locations = np.linspace(upper_bound, lower_bound, len(texts) + 1)[:len(texts)]&amp;#10;        if self.random:&amp;#10;            locations = np.random.permutation(locations)&amp;#10;        for hint, label, tick, location in zip(&amp;#10;            texts, labels, ticks, locations&amp;#10;            &amp;#10;        ):&amp;#10;            hint_text = visual.TextBox2(&amp;#10;                 win, text=hint, font='Open Sans',&amp;#10;                 pos=(0, location), units='norm', letterHeight=self.FONT_SIZE / 2,&amp;#10;                 size=(self.LABEL_WIDTH, self.SLIDER_SIZE), borderWidth=0.0,&amp;#10;                 color='black', colorSpace='rgb',&amp;#10;                 opacity=None, bold=False, italic=False,&amp;#10;                 lineSpacing=1.0, speechPoint=None,&amp;#10;                 padding=0.0, alignment='center',&amp;#10;                 anchor='top-center', overflow='visible',&amp;#10;                 fillColor=None, borderColor=None,&amp;#10;                 flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;                 editable=False,&amp;#10;                 name=hint.lower().replace(&quot; &quot;, &quot;_&quot;).replace(&quot;?&quot;, &quot;&quot;), &amp;#10;                 autoLog=False&amp;#10;            )&amp;#10;            hint_text.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(hint_text)&amp;#10;            self.HINTS.append(hint_text)&amp;#10;            slider = visual.Slider(win=win, name=hint.lower().replace(&quot; &quot;, &quot;_&quot;).replace(&quot;?&quot;, &quot;_slider&quot;),&amp;#10;                startValue=None, size=(self.SLIDER_WIDTH, self.SLIDER_SIZE), pos=(0, location - self.SLIDER_SIZE * 2), units='norm',&amp;#10;                labels=label, &amp;#10;                ticks=tick, &amp;#10;                granularity=1,&amp;#10;                style='rating', styleTweaks=('triangleMarker',), opacity=None,&amp;#10;                labelColor='black', markerColor='Red', lineColor='darkgrey', colorSpace='rgb',&amp;#10;                font='Open Sans', labelHeight=self.FONT_SIZE / 4,&amp;#10;                flip=False, ori=0.0, readOnly=False)&amp;#10;            slider.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(slider)&amp;#10;            self.SLIDERS.append(slider)&amp;#10;&amp;#10;&amp;#10;class BrowserSearchbar(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    SEARCHBAR_SIZE = 0.1&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    WORD_LIST = ['backspace', 'comma', 'period', 'underscore', 'minus', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']&amp;#10;    CHAR_LIST = [',', '.', '_', '-', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']&amp;#10;    &amp;#10;    &amp;#10;    def __init__(self):&amp;#10;        super().__init__()&amp;#10;        self.draw_interface()&amp;#10;        self.allocate_target()&amp;#10;        &amp;#10;    def log(self):&amp;#10;        thisExp.addData('browser_navigation_template', self.target_name)&amp;#10;        thisExp.addData('browser_navigation_user_input', self.get_text())&amp;#10;    &amp;#10;    def update(self):&amp;#10;        self.search_bar.text = &quot;&quot;.join([c for c in self.search_bar.text if c in self.CHAR_LIST])&amp;#10;        if self.search_bar.text.replace(&quot; &quot;, &quot;&quot;).lower() == self.target_name.lower():&amp;#10;            self.search_bar.editable = False&amp;#10;            self.search_bar.hasFocus = False&amp;#10;            return False&amp;#10;        self.search_bar.editable = True&amp;#10;        self.search_bar.hasFocus = True&amp;#10;        return True&amp;#10;    &amp;#10;    def get_text(self):&amp;#10;        return self.search_bar.text&amp;#10;        &amp;#10;    def allocate_target(self, url=None):&amp;#10;        if url is None:&amp;#10;            self.target_name = fake.url().replace(&quot;http://&quot;, &quot;&quot;).replace(&quot;https://&quot;, &quot;&quot;).strip(&quot;/&quot;) # np.random.choice([&quot;www.google.com&quot;, &quot;www.bing.com&quot;])&amp;#10;        else:&amp;#10;            self.target_name = url&amp;#10;        self.search_bar.reset()&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        left_circle = visual.ShapeStim(&amp;#10;            win=win, name='base_searchbar_left_circle',units='norm', &amp;#10;            size=(self.SEARCHBAR_SIZE / self.ASPECT_RATIO, self.SEARCHBAR_SIZE), &amp;#10;            vertices='circle',&amp;#10;            ori=0.0, &amp;#10;            pos=(-1.0 + self.SEARCHBAR_SIZE / self.ASPECT_RATIO, 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE / 2), &amp;#10;            anchor='top-left',&amp;#10;            lineWidth=1.0,&amp;#10;            colorSpace='rgb', lineColor=None, fillColor='lightgray',&amp;#10;            opacity=1.0, interpolate=True)&amp;#10;        left_circle.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(left_circle)&amp;#10;        right_circle = visual.ShapeStim(&amp;#10;            win=win, name='base_searchbar_right_circle',units='norm', &amp;#10;            size=(self.SEARCHBAR_SIZE / self.ASPECT_RATIO, self.SEARCHBAR_SIZE), &amp;#10;            vertices='circle',&amp;#10;            ori=0.0, &amp;#10;            pos=(1.0 - self.SEARCHBAR_SIZE / self.ASPECT_RATIO, 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE / 2), &amp;#10;            anchor='top-right',&amp;#10;            lineWidth=1.0,&amp;#10;            colorSpace='rgb', lineColor=None, fillColor='lightgray',&amp;#10;            opacity=1.0, interpolate=True)&amp;#10;        right_circle.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(right_circle)&amp;#10;        bar = visual.Rect(&amp;#10;            win=win, name='base_searchbar_bar',units='norm', &amp;#10;            size=(2.0 - 3 * self.SEARCHBAR_SIZE / self.ASPECT_RATIO, self.SEARCHBAR_SIZE), &amp;#10;            ori=0.0, &amp;#10;            pos=(0.0, 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE / 2), &amp;#10;            anchor='top-center',&amp;#10;            lineWidth=1.0,&amp;#10;            colorSpace='rgb', lineColor=None, fillColor='lightgray',&amp;#10;            opacity=1.0, interpolate=True)&amp;#10;        bar.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bar)&amp;#10;        self.search_bar = visual.TextBox2(&amp;#10;            win=win,&amp;#10;            name=&quot;base_searchbar_input&quot;, &amp;#10;            placeholder=&quot;&quot;,&amp;#10;            text=&quot;&quot;,&amp;#10;            font=&quot;Open Sans&quot;,&amp;#10;            letterHeight=self.FONT_SIZE / 2,&amp;#10;            alignment=&quot;center-left&quot;,&amp;#10;            units='norm',&amp;#10;            anchor='top-center',&amp;#10;            padding=0.01,&amp;#10;            lineSpacing=1.0,&amp;#10;            bold=False,&amp;#10;            italic=False,&amp;#10;            color=&quot;black&quot;,&amp;#10;            borderWidth=0.0,&amp;#10;            fillColor=None,&amp;#10;            borderColor=None,&amp;#10;            overflow=&quot;visible&quot;,&amp;#10;            editable=False,&amp;#10;            pos=(0, 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.SEARCHBAR_SIZE / 2),&amp;#10;            size=(2.0 - 3 * self.SEARCHBAR_SIZE / self.ASPECT_RATIO, self.SEARCHBAR_SIZE))&amp;#10;        self.search_bar.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.search_bar)&amp;#10;&amp;#10;&amp;#10;class TrashItemsOverlay(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    FOLDER_SIZE = 0.1&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    FOLDERS = []&amp;#10;    FOLDER_HIGHLIGHTS = []&amp;#10;    &amp;#10;    TARGET = 'resources/trash_stimuli.png'&amp;#10;    TARGET_HIGHLIGHT = 'resources/trash_stimuli_highlight.png'&amp;#10;    &amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    last_mouse_pressed = False&amp;#10;    last_mouse_location = (0.0, 0.0)&amp;#10;    &amp;#10;    def __init__(self, N=6):&amp;#10;        super().__init__()&amp;#10;        self.N = N&amp;#10;        self.draw_interface()&amp;#10;        &amp;#10;    def highlight_folders(self, pos):&amp;#10;        count = 0&amp;#10;        for folder_highlight in self.FOLDER_HIGHLIGHTS:&amp;#10;            corners = [&amp;#10;                (folder_highlight.pos[0] + x, folder_highlight.pos[1] + y)&amp;#10;                for x in [folder_highlight.size[0] / -2, folder_highlight.size[0] / 2] for y in [folder_highlight.size[1] / -2, folder_highlight.size[1] / 2]&amp;#10;            ]&amp;#10;            found = False&amp;#10;            for corner in corners:&amp;#10;                if min(self.last_mouse_location[0], pos[0]) &lt;= corner[0] &lt;= max(self.last_mouse_location[0], pos[0]) and \&amp;#10;                    min(self.last_mouse_location[1], pos[1]) &lt;= corner[1] &lt;= max(self.last_mouse_location[1], pos[1]):&amp;#10;                        count += 1&amp;#10;                        found = True&amp;#10;                        folder_highlight.opacity = 1.0&amp;#10;                        break&amp;#10;            if not found:&amp;#10;                folder_highlight.opacity = 0.0&amp;#10;        return not count == len(self.FOLDER_HIGHLIGHTS)&amp;#10;    &amp;#10;    def highlight_area(self, pos, show=False):&amp;#10;        if show:&amp;#10;            self.area.opacity = 0.8&amp;#10;            self.area.pos = (min(pos[0], self.last_mouse_location[0]) + abs(pos[0] - self.last_mouse_location[0]) / 2, &amp;#10;                                min(pos[1], self.last_mouse_location[1]) + abs(pos[1] - self.last_mouse_location[1]) / 2)&amp;#10;            self.area.size = (abs(pos[0] - self.last_mouse_location[0]), abs(pos[1] - self.last_mouse_location[1]))&amp;#10;        else:&amp;#10;            self.area.opacity = 0.0&amp;#10;        &amp;#10;    def update(self):&amp;#10;        buttons = self.mouse.getPressed()&amp;#10;        if not self.last_mouse_pressed and np.sum(buttons) &gt; 0:&amp;#10;            self.last_mouse_pressed = True&amp;#10;            self.last_mouse_location = self.mouse.getPos()&amp;#10;            self.highlight_area(self.mouse.getPos(), show=True)&amp;#10;            # Highlight all selected folders&amp;#10;            self.highlight_folders(self.mouse.getPos())&amp;#10;            return True&amp;#10;        elif self.last_mouse_pressed and np.sum(buttons) &gt; 0:&amp;#10;            self.highlight_area(self.mouse.getPos(), show=True)&amp;#10;            # Highlight all selected folders&amp;#10;            self.highlight_folders(self.mouse.getPos())&amp;#10;            return True&amp;#10;        elif self.last_mouse_pressed and np.sum(buttons) == 0:&amp;#10;            self.highlight_area(self.mouse.getPos(), show=False)&amp;#10;            # Highlight all selected folders&amp;#10;            self.last_mouse_pressed = False&amp;#10;            return self.highlight_folders(self.mouse.getPos())&amp;#10;        self.highlight_area(self.mouse.getPos(), show=False)&amp;#10;        # None selected&amp;#10;        return True&amp;#10;        &amp;#10;    def log(self):&amp;#10;        for folder in self.FOLDERS:&amp;#10;            thisExp.addData(folder.name, folder.pos)&amp;#10;        thisExp.addData(&quot;selection_start&quot;, self.last_mouse_location)&amp;#10;        thisExp.addData(&quot;selection_end&quot;, self.mouse.getPos())&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        self.last_mouse_pressed = False&amp;#10;        upper_bound = 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE * 2&amp;#10;        lower_bound = -1.0 + self.BAR_SIZE + self.TOOLBAR_SIZE&amp;#10;        left_bound = -1.0 + self.TOOLBAR_SIZE / self.ASPECT_RATIO + self.FOLDER_SIZE / 2 / self.ASPECT_RATIO&amp;#10;        right_bound = 1.0 - self.TOOLBAR_SIZE / self.ASPECT_RATIO - self.FOLDER_SIZE / 2 / self.ASPECT_RATIO&amp;#10;        locs_x = np.random.uniform(low=left_bound, high=right_bound, size=self.N)&amp;#10;        locs_y = np.random.uniform(low=lower_bound, high=upper_bound, size=self.N)&amp;#10;        self.area.opacity = 0.0&amp;#10;        self.area.size = (0.0, 0.0)&amp;#10;        self.area.pos = (0.0, 0.0)&amp;#10;        for folder, folder_highlight, loc_x, loc_y in zip(self.FOLDERS, self.FOLDER_HIGHLIGHTS, locs_x, locs_y):&amp;#10;            folder.pos = (loc_x, loc_y)&amp;#10;            folder_highlight.pos = (loc_x, loc_y)&amp;#10;            folder_highlight.opacity = 0.0&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        self.area = visual.Rect(&amp;#10;            win=win, name='selection_area',units='norm', &amp;#10;            size=(0.0, 0.0), &amp;#10;            ori=0.0, &amp;#10;            pos=(0.0, 0.0), &amp;#10;            anchor='center',&amp;#10;            lineWidth=2.0,&amp;#10;            colorSpace='rgb',&amp;#10;            lineColor=[-1.0000, -0.0588, 0.6863],&amp;#10;            fillColor=[0.3961, 0.6314, 1.0000],&amp;#10;            opacity=0.0, interpolate=True)&amp;#10;        self.area.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.area)&amp;#10;        upper_bound = 1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE * 2&amp;#10;        lower_bound = -1.0 + self.BAR_SIZE + self.TOOLBAR_SIZE&amp;#10;        left_bound = -1.0 + self.TOOLBAR_SIZE / self.ASPECT_RATIO + self.FOLDER_SIZE / 2 / self.ASPECT_RATIO&amp;#10;        right_bound = 1.0 - self.TOOLBAR_SIZE / self.ASPECT_RATIO - self.FOLDER_SIZE / 2 / self.ASPECT_RATIO&amp;#10;        locs_x = np.random.uniform(low=left_bound, high=right_bound, size=self.N)&amp;#10;        locs_y = np.random.uniform(low=lower_bound, high=upper_bound, size=self.N)&amp;#10;        for index, (loc_x, loc_y) in enumerate(zip(&amp;#10;            locs_x, locs_y&amp;#10;        )):&amp;#10;            folder_highlight = visual.ImageStim(&amp;#10;                win=win,&amp;#10;                name=f&quot;trash_folder_highlight_{index}&quot;, &amp;#10;                units='norm', &amp;#10;                opacity=0.0,&amp;#10;                image=self.TARGET_HIGHLIGHT, anchor='center',&amp;#10;                pos=(loc_x, loc_y), size=(self.FOLDER_SIZE / self.ASPECT_RATIO, self.FOLDER_SIZE),&amp;#10;                interpolate=True)&amp;#10;            folder_highlight.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(folder_highlight)&amp;#10;            self.FOLDER_HIGHLIGHTS.append(folder_highlight)&amp;#10;            folder = visual.ImageStim(&amp;#10;                win=win,&amp;#10;                name=f&quot;trash_folder_{index}&quot;, &amp;#10;                units='norm', &amp;#10;                image=self.TARGET, anchor='center',&amp;#10;                pos=(loc_x, loc_y), size=(self.FOLDER_SIZE / self.ASPECT_RATIO, self.FOLDER_SIZE),&amp;#10;                interpolate=True)&amp;#10;            folder.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(folder)&amp;#10;            self.FOLDERS.append(folder)&amp;#10;            &amp;#10;class PopupWindow(Component):&amp;#10;    ICON = 'resources/warning.png'&amp;#10;    WINDOW_SIZE = 0.5&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BUTTON_SIZE = 0.1&amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    &amp;#10;    OPTIONS = {&amp;#10;        &quot;mac&quot;: [&quot;Yes&quot;, &quot;No&quot;],&amp;#10;        &quot;windows&quot;: [&quot;No&quot;, &quot;Yes&quot;]&amp;#10;    }&amp;#10;    target_name = &quot;Yes&quot;&amp;#10;    &amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    BUTTONS = []&amp;#10;    BUTTON_TEXTS = []&amp;#10;    &amp;#10;    def __init__(self, style):&amp;#10;        super().__init__()&amp;#10;        self.style = style&amp;#10;        self.draw_interface()&amp;#10;        &amp;#10;    def update(self):&amp;#10;        for element, element_text in zip(self.BUTTONS, self.BUTTON_TEXTS):&amp;#10;            if element.contains(self.mouse.getPos()):&amp;#10;                if element_text.text == self.target_name:&amp;#10;                    element.fillColor = [0.7569, 0.8667, 0.9529]&amp;#10;                else:&amp;#10;                    element.fillColor = [0.6, 0.6, 0.6]&amp;#10;            else:&amp;#10;                element.fillColor = [0.9843, 0.9843, 0.9843]&amp;#10;            if self.mouse.isPressedIn(element) and element_text.text == self.target_name:&amp;#10;                return False&amp;#10;        return True&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        style = self.style.current_style&amp;#10;        for button_text, override in zip(self.BUTTON_TEXTS, self.OPTIONS[style]):&amp;#10;            button_text.text = override&amp;#10;        &amp;#10;    def draw_interface(self):&amp;#10;        style = self.style.current_style&amp;#10;        bg_window = visual.Rect(&amp;#10;            win=win,&amp;#10;            name=&quot;base_popup&quot;, &amp;#10;            units='norm',&amp;#10;            fillColor=[0.7804, 0.7804, 0.7804], opacity=0.96, anchor='center',&amp;#10;            pos=(0, 0), size=(2 * self.WINDOW_SIZE, self.WINDOW_SIZE),&amp;#10;            interpolate=True)&amp;#10;        bg_window.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bg_window)&amp;#10;        bg_toolbar = visual.Rect(&amp;#10;            win=win,&amp;#10;            name=&quot;base_popup_toolbar&quot;, &amp;#10;            units='norm',&amp;#10;            fillColor=&quot;lightgray&quot;, opacity=1.0, anchor='top-center',&amp;#10;            pos=(0, self.WINDOW_SIZE / 2), size=(2 * self.WINDOW_SIZE, self.TOOLBAR_SIZE),&amp;#10;            interpolate=True)&amp;#10;        bg_toolbar.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(bg_toolbar)&amp;#10;        icon_size = self.WINDOW_SIZE - self.TOOLBAR_SIZE * 2 - self.BUTTON_SIZE&amp;#10;        icon = visual.ImageStim(&amp;#10;            win=win,&amp;#10;            name=&quot;base_popup_icon&quot;,&amp;#10;            units=&quot;norm&quot;,&amp;#10;            image=self.ICON,&amp;#10;            opacity=1.0,&amp;#10;            size=(icon_size / self.ASPECT_RATIO, icon_size),&amp;#10;            pos=(-1 * self.WINDOW_SIZE + self.TOOLBAR_SIZE / 2, self.TOOLBAR_SIZE / -2),&amp;#10;            anchor=&quot;center-left&quot;&amp;#10;        )&amp;#10;        icon.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(icon)&amp;#10;        &amp;#10;        content = visual.TextBox2(&amp;#10;             win, text=&quot;Are you sure you want to permanently delete these files?&quot;, font='Open Sans',&amp;#10;             pos=(-1 * self.WINDOW_SIZE + icon_size, self.TOOLBAR_SIZE / -2), units='norm', letterHeight=self.FONT_SIZE / 2,&amp;#10;             size=(2 * self.WINDOW_SIZE - icon_size - self.TOOLBAR_SIZE, icon_size), borderWidth=2.0,&amp;#10;             color='black', colorSpace='rgb',&amp;#10;             opacity=None, bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.0, alignment='top-left',&amp;#10;             anchor='bottom-left', overflow='visible',&amp;#10;             fillColor=None, borderColor=None,&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='base_popup_content', &amp;#10;             autoLog=False&amp;#10;        )&amp;#10;        content.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(content)&amp;#10;        &amp;#10;        for index, button_name in enumerate(self.OPTIONS[style]):&amp;#10;            button = visual.Rect(&amp;#10;                win=win,&amp;#10;                name=f&quot;base_popup_button_{index}&quot;, &amp;#10;                units='norm',&amp;#10;                lineColor=[-1.0000, -0.0588, 0.6863], lineWidth=1.0,&amp;#10;                fillColor=[0.9843, 0.9843, 0.9843], opacity=1.0, anchor='bottom-right',&amp;#10;                pos=(self.WINDOW_SIZE - self.BUTTON_SIZE * (index + 1) / 2 - self.BUTTON_SIZE * index * 2, self.WINDOW_SIZE / -2 + self.TOOLBAR_SIZE / 2),&amp;#10;                size=(self.BUTTON_SIZE * 2, self.BUTTON_SIZE),&amp;#10;                interpolate=True)&amp;#10;            # Highlight [0.7569, 0.8667, 0.9529]&amp;#10;            button.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(button)&amp;#10;            self.BUTTONS.append(button)&amp;#10;            button_content = visual.TextBox2(&amp;#10;                 win, text=button_name, font='Open Sans',&amp;#10;                 pos=(self.WINDOW_SIZE - self.BUTTON_SIZE * (index + 1) / 2 - self.BUTTON_SIZE * index * 2, self.WINDOW_SIZE / -2 + self.TOOLBAR_SIZE / 2),&amp;#10;                 size=(self.BUTTON_SIZE * 2, self.BUTTON_SIZE),&amp;#10;                 units='norm', letterHeight=self.FONT_SIZE / 2,&amp;#10;                 borderWidth=2.0,&amp;#10;                 color='black', colorSpace='rgb',&amp;#10;                 opacity=None, bold=False, italic=False,&amp;#10;                 lineSpacing=1.0, speechPoint=None,&amp;#10;                 padding=0.0, alignment='center',&amp;#10;                 anchor='bottom-right', overflow='visible',&amp;#10;                 fillColor=None, borderColor=None,&amp;#10;                 flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;                 editable=False,&amp;#10;                 name=f&quot;base_popup_button_text_{index}&quot;, &amp;#10;                 autoLog=False&amp;#10;            )&amp;#10;            button_content.setAutoDraw(True)&amp;#10;            self.COMPONENTS.append(button_content)&amp;#10;            self.BUTTON_TEXTS.append(button_content)&amp;#10;&amp;#10;class SplitViewEditor(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    TOOLBAR_SIZE = 0.1&amp;#10;    PADDING_SIZE = 0.05&amp;#10;    &amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    &amp;#10;    TARGET = &quot;&quot;&amp;#10;    &amp;#10;    def __init__(self):&amp;#10;        super().__init__()&amp;#10;        self.draw_interface()&amp;#10;        self.allocate_target()&amp;#10;        &amp;#10;    def allocate_target(self):&amp;#10;        self.TARGET = fake.sentence(nb_words=int(personalized_settings[&quot;typing_speed&quot;] / 4.7 * 45)+1)   #&quot;TODO: Add template&quot;&amp;#10;        self.reset()&amp;#10;    &amp;#10;    def allocate_test_target(self):&amp;#10;        self.TARGET = fake.sentence(nb_words=40)&amp;#10;        self.reset()&amp;#10;        &amp;#10;    def log(self):&amp;#10;        thisExp.addData(&quot;notes_repeat_source&quot;, self.notes_repeat_source.text)&amp;#10;        thisExp.addData(&quot;notes_repeat_target&quot;, self.notes_repeat_target.text)&amp;#10;    &amp;#10;    def safe_match(self, input_string):&amp;#10;        return len(re.sub(r'[^A-Za-z,. ]', '', input_string))&amp;#10;    &amp;#10;    def update(self):&amp;#10;        matched = self.safe_match(self.notes_repeat_source.text) &lt;= self.safe_match(self.notes_repeat_target.text)&amp;#10;        if matched:&amp;#10;            self.notes_repeat_target.hasFocus = False&amp;#10;            self.notes_repeat_target.editable = False&amp;#10;            return False&amp;#10;        self.notes_repeat_target.hasFocus = True&amp;#10;        self.notes_repeat_target.editable = True&amp;#10;        return True&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        self.notes_repeat_target.clear()&amp;#10;        self.notes_repeat_source.reset()&amp;#10;        self.notes_repeat_target.reset()&amp;#10;        self.notes_repeat_source.text = self.TARGET&amp;#10;        &amp;#10;    def draw_interface(self):&amp;#10;        self.notes_repeat_source = visual.TextBox2(&amp;#10;             win, text='This is the template.\nMultiline.', placeholder='Type here...', font='Open Sans',&amp;#10;             pos=(-1 * self.PADDING_SIZE / 2, (1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.PADDING_SIZE) / 2),&amp;#10;             size=((1.0 - 2 * self.PADDING_SIZE) / 2 * self.ASPECT_RATIO, (2.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.BAR_SIZE - 2 * self.PADDING_SIZE) / 2),&amp;#10;             borderWidth=2.0, &amp;#10;             units='height',&amp;#10;             letterHeight=self.FONT_SIZE / 2 / 2,&amp;#10;             color='black', colorSpace='rgb',&amp;#10;             opacity=None,&amp;#10;             bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.05, alignment='top-left',&amp;#10;             anchor='top-right', overflow='visible',&amp;#10;             fillColor='white', borderColor='black',&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='notes_repeat_source',&amp;#10;             autoLog=False,&amp;#10;             autoDraw=True&amp;#10;        )&amp;#10;        self.COMPONENTS.append(self.notes_repeat_source)&amp;#10;        self.notes_repeat_target = visual.TextBox2(&amp;#10;             win, text=None, placeholder='Type here...', font='Open Sans',&amp;#10;             pos=(self.PADDING_SIZE / 2, (1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.PADDING_SIZE) / 2),&amp;#10;             size=((1.0 - 2 * self.PADDING_SIZE) / 2 * self.ASPECT_RATIO, (2.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.BAR_SIZE - 2 * self.PADDING_SIZE) / 2),&amp;#10;             units='height',&amp;#10;             letterHeight=self.FONT_SIZE / 2 / 2,&amp;#10;             borderWidth=2.0,&amp;#10;             color='black', colorSpace='rgb',&amp;#10;             opacity=None,&amp;#10;             bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.05, alignment='top-left',&amp;#10;             anchor='top-left', overflow='visible',&amp;#10;             fillColor='white', borderColor='black',&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='notes_repeat_target',&amp;#10;             autoLog=False,&amp;#10;             autoDraw=True&amp;#10;        )&amp;#10;        self.COMPONENTS.append(self.notes_repeat_target)&amp;#10;        &amp;#10;&amp;#10;class SingleViewEditor(SplitViewEditor):&amp;#10;    def log(self):&amp;#10;        thisExp.addData(&quot;single_note_repeat_source&quot;, self.notes_repeat_source.text)&amp;#10;        thisExp.addData(&quot;single_note_repeat_target&quot;, self.notes_repeat_target.text)&amp;#10;    &amp;#10;    def draw_interface(self):&amp;#10;        self.notes_repeat_source = visual.TextBox2(&amp;#10;             win, text='This is the template.\nMultiline.', placeholder='Type here...', font='Open Sans',&amp;#10;             pos=(0, (1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.PADDING_SIZE) / 2),&amp;#10;             size=((1.0 - 2 * self.PADDING_SIZE) * self.ASPECT_RATIO, (2.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.BAR_SIZE - 2 * self.PADDING_SIZE) / 2),&amp;#10;             borderWidth=2.0, &amp;#10;             units='height',&amp;#10;             letterHeight=self.FONT_SIZE / 2 / 2,&amp;#10;             color='gray', colorSpace='rgb',&amp;#10;             opacity=None,&amp;#10;             bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.05, alignment='top-left',&amp;#10;             anchor='top-center', overflow='visible',&amp;#10;             fillColor='white', borderColor='black',&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='single_note_repeat_source',&amp;#10;             autoLog=False,&amp;#10;             autoDraw=True&amp;#10;        )&amp;#10;        self.COMPONENTS.append(self.notes_repeat_source)&amp;#10;        self.notes_repeat_target = visual.TextBox2(&amp;#10;             win, text=None, placeholder='', font='Open Sans',&amp;#10;             pos=(0, (1.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.PADDING_SIZE) / 2),&amp;#10;             size=((1.0 - 2 * self.PADDING_SIZE) * self.ASPECT_RATIO, (2.0 - self.FONT_SIZE - self.TOOLBAR_SIZE - self.BAR_SIZE - 2 * self.PADDING_SIZE) / 2),&amp;#10;             units='height',&amp;#10;             letterHeight=self.FONT_SIZE / 2 / 2,&amp;#10;             borderWidth=2.0,&amp;#10;             color='black', colorSpace='rgb',&amp;#10;             opacity=0.1,&amp;#10;             bold=False, italic=False,&amp;#10;             lineSpacing=1.0, speechPoint=None,&amp;#10;             padding=0.05, alignment='top-left',&amp;#10;             anchor='top-center', overflow='visible',&amp;#10;             fillColor='white', borderColor='black',&amp;#10;             flipHoriz=False, flipVert=False, languageStyle='LTR',&amp;#10;             editable=False,&amp;#10;             name='single_note_repeat_target',&amp;#10;             autoLog=False,&amp;#10;             autoDraw=True&amp;#10;        )&amp;#10;        self.COMPONENTS.append(self.notes_repeat_target)&amp;#10;&amp;#10;&amp;#10;class Notification(Component):&amp;#10;    FONT_SIZE = 0.1&amp;#10;    BAR_SIZE = 0.1&amp;#10;    WIDTH = 0.4&amp;#10;    HEIGHT = 0.2&amp;#10;    &amp;#10;    ASPECT_RATIO = win.size[0] / win.size[1]&amp;#10;    &amp;#10;    LOCATIONS = {&amp;#10;        &quot;windows&quot;: {&amp;#10;            &quot;anchor&quot;: &quot;bottom-right&quot;,&amp;#10;            &quot;image&quot;: &quot;resources/windows/notification.png&quot;,&amp;#10;            &quot;size&quot;: (WIDTH, HEIGHT),&amp;#10;            &quot;pos&quot;: (0.5 * ASPECT_RATIO, -0.5 + BAR_SIZE / 2)&amp;#10;        },&amp;#10;        &quot;mac&quot;: {&amp;#10;            &quot;anchor&quot;: &quot;top-right&quot;,&amp;#10;            &quot;image&quot;: &quot;resources/mac/notification.png&quot;,&amp;#10;            &quot;size&quot;: (WIDTH, HEIGHT),&amp;#10;            &quot;pos&quot;: (0.5 * ASPECT_RATIO, 0.5 - FONT_SIZE / 2)&amp;#10;        }&amp;#10;    }&amp;#10;    &amp;#10;    mouse = event.Mouse(win=win)&amp;#10;    &amp;#10;    def __init__(self, style):&amp;#10;        super().__init__()&amp;#10;        self.style = style&amp;#10;        self.draw_interface()&amp;#10;    &amp;#10;    def update(self):&amp;#10;        if self.mouse.isPressedIn(self.background):&amp;#10;            return False&amp;#10;        return True&amp;#10;        &amp;#10;    def reset(self):&amp;#10;        style = self.style.current_style&amp;#10;        for key, value in self.LOCATIONS[style].items():&amp;#10;            setattr(self.background, key, value)&amp;#10;        &amp;#10;    def draw_interface(self):&amp;#10;        style = self.style.current_style&amp;#10;        self.background = visual.ImageStim(&amp;#10;            win=win,&amp;#10;            name=&quot;notification_background&quot;, &amp;#10;            units='height', &amp;#10;            interpolate=True,&amp;#10;            **self.LOCATIONS[style])&amp;#10;        self.background.setAutoDraw(True)&amp;#10;        self.COMPONENTS.append(self.background)&amp;#10;&amp;#10;&amp;#10;def hide_all():&amp;#10;    task_bar.hide()&amp;#10;    base_window.hide()&amp;#10;    browser_searchbar.hide()&amp;#10;    form_overlay.hide()&amp;#10;    trash_items_overlay.hide()&amp;#10;    popup_window.hide()&amp;#10;    split_view_editor.hide()&amp;#10;    single_view_editor.hide()&amp;#10;    notification.hide()&amp;#10;    &amp;#10;def reset_layout():&amp;#10;    stylizer.reset()&amp;#10;    task_bar.reset()&amp;#10;    base_window.reset()&amp;#10;    popup_window.reset()&amp;#10;    split_view_editor.reset()&amp;#10;    single_view_editor.reset()&amp;#10;    notification.reset()&amp;#10;&amp;#10;class EventTimer():&amp;#10;    showed_alertness_prompt = 0&amp;#10;    interval_alertness_prompt = 5 * 60  # seconds&amp;#10;    duration_experiment = 2 * 60 * 60 + 5 * 60   # seconds&amp;#10;    keywords = [&quot;MAIL&quot;, &quot;FILE_DRAGGING&quot;, &quot;FILE_OPENING&quot;, &quot;TRASH_BIN&quot;, &quot;NOTES&quot;]&amp;#10;    &amp;#10;    def __init__(self):&amp;#10;        self.clock = core.MonotonicClock()&amp;#10;    &amp;#10;    def should_end(self):&amp;#10;        if self.clock.getTime() &gt; self.duration_experiment:&amp;#10;            return True&amp;#10;        return False&amp;#10;    &amp;#10;    def should_show(self, target):&amp;#10;        if target not in self.keywords:&amp;#10;            expected_prompt_counts = int(self.clock.getTime() / self.interval_alertness_prompt)&amp;#10;            if self.showed_alertness_prompt &lt; expected_prompt_counts:&amp;#10;                self.showed_alertness_prompt += 1&amp;#10;                return 1&amp;#10;            return 0&amp;#10;        if tasks.thisN == self.keywords.index(target):&amp;#10;            return 1&amp;#10;        return 0&amp;#10;&amp;#10;stylizer = Stylizer()&amp;#10;task_bar = TaskBar(style=stylizer)&amp;#10;base_window = BaseWindow(style=stylizer)&amp;#10;browser_searchbar = BrowserSearchbar()&amp;#10;form_overlay = FormOverlay(random=True)&amp;#10;trash_items_overlay = TrashItemsOverlay(N=8)&amp;#10;popup_window = PopupWindow(style=stylizer)&amp;#10;split_view_editor = SplitViewEditor()&amp;#10;single_view_editor = SingleViewEditor()&amp;#10;notification = Notification(style=stylizer)&amp;#10;&amp;#10;hide_all()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="global_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="test">
      <RoutineSettingsComponent name="test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task = TaskBar()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="file_manager_homescreen">
      <RoutineSettingsComponent name="file_manager_homescreen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="file_manager_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="file_manager_code_homescreen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task_bar.allocate_target(index=0)&amp;#10;task_bar.show()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="continueRoutine = task_bar.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="file_manager_code_homescreen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="file_manager_mouse_homescreen" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="file_manager_mouse_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="file_manager_mouse_movement_homescreen," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="file_manager_textbox_homescreen" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="file_manager_textbox_homescreen" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Open &lt;i&gt;{}&lt;/i&gt; on the task bar&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="browser_homescreen">
      <RoutineSettingsComponent name="browser_homescreen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="browser_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="browser_code_homescreen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task_bar.allocate_target(index=1)&amp;#10;task_bar.show()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="continueRoutine = task_bar.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="browser_code_homescreen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="browser_mouse_homescreen" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="browser_mouse_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="browser_mouse_movement_homescreen," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="browser_textbox_homescreen" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="browser_textbox_homescreen" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Open &lt;i&gt;{}&lt;/i&gt; on the task bar&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="browser_content">
      <RoutineSettingsComponent name="browser_content" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="browser_content" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="browser_content_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="form_overlay.reset()&amp;#10;form_overlay.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="base_window.update()&amp;#10;task_bar.update()&amp;#10;browser_searchbar.update()&amp;#10;continueRoutine = form_overlay.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="form_overlay.log()&amp;#10;form_overlay.hide()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="browser_content_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="browser_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="browser_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please complete the form&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <MouseComponent name="browser_content_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="browser_content_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="browser_content_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="window_close">
      <RoutineSettingsComponent name="window_close" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="window_close" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="close_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.allocate_target()&amp;#10;base_window.show()&amp;#10;task_bar.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;continueRoutine = base_window.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="base_window.log()&amp;#10;hide_all()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="close_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="close_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="close_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Click &lt;i&gt;{}&lt;/i&gt; to Exit {}&quot;.format(base_window.target_name, task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <MouseComponent name="window_close_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="window_close_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="window_close_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <ImageComponent name="success_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="resources/success.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="success_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="browser_navigation">
      <RoutineSettingsComponent name="browser_navigation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="browser_navigation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="browser_navigation_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;browser_searchbar.allocate_target()&amp;#10;base_window.show()&amp;#10;browser_searchbar.show()&amp;#10;task_bar.show()&amp;#10;&amp;#10;win.winHandle.activate()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="base_window.update()&amp;#10;task_bar.update()&amp;#10;continueRoutine = browser_searchbar.update()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="browser_searchbar.log()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="browser_navigation_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="browser_navigation_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="browser_navigation_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please enter the url &lt;i&gt;{}&lt;/i&gt;&quot;.format(browser_searchbar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <MouseComponent name="browser_navigation_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="browser_navigation_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="browser_navigation_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <KeyboardComponent name="browser_navigation_user_key_release" plugin="None">
        <Param val="browser_searchbar.WORD_LIST" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="browser_navigation_user_key_release" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="file_manager_dragging">
      <RoutineSettingsComponent name="file_manager_dragging" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="file_manager_dragging" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="file_manager_dragging_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;base_window.show()&amp;#10;task_bar.show()&amp;#10;&amp;#10;# Define size and location of the stimuli&amp;#10;size = 0.1&amp;#10;radius = 0.2&amp;#10;distance = 0.4&amp;#10;angle = np.random.uniform(0, 2 * np.pi)&amp;#10;loc_x, loc_y = np.random.uniform(-radius, radius), np.random.uniform(-radius, radius)&amp;#10;target_x, target_y = loc_x + distance * np.cos(angle), loc_y + distance * np.sin(angle)&amp;#10;# Log clicked elements&amp;#10;last_clicked_offset = None&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;base_window.update()&amp;#10;&amp;#10;buttons = stimuli_dragging_mouse.getPressed()&amp;#10;if last_clicked_offset is None and stimuli_dragging_mouse.isPressedIn(stimuli_dragging_stimuli_image):&amp;#10;    last_clicked_offset = stimuli_dragging_stimuli_image.pos - stimuli_dragging_mouse.getPos()&amp;#10;elif last_clicked_offset is not None and np.sum(buttons) &gt; 0:&amp;#10;    stimuli_dragging_stimuli_image.setPos(last_clicked_offset + stimuli_dragging_mouse.getPos())&amp;#10;if np.sum(buttons) == 0 and last_clicked_offset is not None:&amp;#10;    if np.linalg.norm(stimuli_dragging_stimuli_image.pos - stimuli_dragging_target_image.pos) &lt;= size:&amp;#10;        continueRoutine = False&amp;#10;    else:&amp;#10;        last_clicked_offset = None&amp;#10;        stimuli_dragging_stimuli_image.setPos((loc_x, loc_y))" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('size', size)&amp;#10;thisExp.addData('radius', radius)&amp;#10;thisExp.addData('angle', angle)&amp;#10;thisExp.addData('distance', distance)&amp;#10;thisExp.addData('stimuli_location', (loc_x, loc_y))&amp;#10;thisExp.addData('target_location', (target_x, target_y))&amp;#10;thisExp.addData('last_clicked_offset', tuple(last_clicked_offset))&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="file_manager_dragging_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="file_manager_dragging_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="file_manager_dragging_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please drag the folder to the destination&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <MouseComponent name="stimuli_dragging_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="stimuli_dragging_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="stimuli_dragging_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <ImageComponent name="stimuli_dragging_target_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="resources/target_stimuli.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stimuli_dragging_target_image" valType="code" updates="None" name="name"/>
        <Param val="0.8" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(target_x, target_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(size, size * BaseWindow.ASPECT_RATIO)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="stimuli_dragging_stimuli_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="resources/drag_stimuli.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stimuli_dragging_stimuli_image" valType="code" updates="None" name="name"/>
        <Param val="0.9" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(loc_x, loc_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(size, size * BaseWindow.ASPECT_RATIO)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="stimuli_dragging_mouse_debug" plugin="None">
        <Param val="lightgrey" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="stimuli_dragging_mouse_debug" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;{:.2f}&quot;.format(np.linalg.norm(stimuli_dragging_mouse_movement.getPos() - np.array([target_x, target_y])))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="file_manager_opening">
      <RoutineSettingsComponent name="file_manager_opening" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="file_manager_opening" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="file_manager_opening_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;base_window.show()&amp;#10;task_bar.show()&amp;#10;&amp;#10;# Define size and location of the stimuli&amp;#10;size = 0.1&amp;#10;radius = 0.4&amp;#10;loc_x, loc_y = np.random.uniform(-radius, radius), np.random.uniform(-radius, radius)&amp;#10;&amp;#10;# Log clicked elements&amp;#10;clicked_elements = 0&amp;#10;last_clicked = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;base_window.update()&amp;#10;&amp;#10;if not last_clicked and stimuli_reaction_mouse_movement.isPressedIn(stimuli_reaction_stimuli_image):&amp;#10;    clicked_elements += 1&amp;#10;    last_clicked = True&amp;#10;if not stimuli_reaction_mouse_movement.isPressedIn(stimuli_reaction_stimuli_image):&amp;#10;    last_clicked = False&amp;#10;if clicked_elements &gt;= 2:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('stimuli_reaction_size', size)&amp;#10;thisExp.addData('stimuli_reaction_radius', radius)&amp;#10;thisExp.addData('stimuli_reaction_stimuli_location', (loc_x, loc_y))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="file_manager_opening_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="file_manager_opening_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="file_manager_opening_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please double-click to open the folders&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <MouseComponent name="stimuli_reaction_mouse_movement" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="stimuli_reaction_mouse_movement" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="stimuli_reaction_mouse_action," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <ImageComponent name="stimuli_reaction_stimuli_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="resources/folder_stimuli.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stimuli_reaction_stimuli_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(loc_x, loc_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(size, size * BaseWindow.ASPECT_RATIO)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="stimuli_reaction_mouse_debug" plugin="None">
        <Param val="lightgrey" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="stimuli_reaction_mouse_debug" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;{:.2f}&quot;.format(np.linalg.norm(stimuli_reaction_mouse_movement.getPos() - np.array([loc_x, loc_y])))" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="trash_bin_homescreen">
      <RoutineSettingsComponent name="trash_bin_homescreen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trash_bin_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trash_bin_code_homescreen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task_bar.allocate_target(index=4)&amp;#10;task_bar.show()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="continueRoutine = task_bar.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trash_bin_code_homescreen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="trash_bin_mouse_homescreen" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="trash_bin_mouse_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="trash_bin_mouse_movement_homescreen," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="trash_bin_textbox_homescreen" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="trash_bin_textbox_homescreen" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Open &lt;i&gt;{}&lt;/i&gt; on the task bar&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="trash_bin_select">
      <RoutineSettingsComponent name="trash_bin_select" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trash_bin_select" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trash_bin_select_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;base_window.show()&amp;#10;task_bar.show()&amp;#10;trash_items_overlay.reset()&amp;#10;trash_items_overlay.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;base_window.update()&amp;#10;task_bar.update()&amp;#10;continueRoutine = trash_items_overlay.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="trash_items_overlay.log()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trash_bin_select_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="trash_bin_select_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="trash_bin_select_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="trash_bin_select_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="trash_bin_select_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="trash_bin_select_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Select all items at once&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="trash_bin_confirm">
      <RoutineSettingsComponent name="trash_bin_confirm" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trash_bin_confirm" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trash_bin_confirm_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="popup_window.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;base_window.update()&amp;#10;task_bar.update()&amp;#10;continueRoutine = popup_window.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="trash_items_overlay.hide()&amp;#10;popup_window.hide()&amp;#10;task_bar.set_trash_empty()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trash_bin_confirm_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="trash_bin_confirm_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="trash_bin_confirm_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="trash_bin_confirm_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="trash_bin_confirm_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="trash_bin_confirm_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Confirm your action&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="style_randomizer">
      <RoutineSettingsComponent name="style_randomizer" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="style_randomizer" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="style_randomizer_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="reset_layout()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="stylizer.log()&amp;#10;&amp;#10;if event_timer.should_end():&amp;#10;    trials.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="style_randomizer_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="notes_homescreen">
      <RoutineSettingsComponent name="notes_homescreen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="notes_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="notes_code_homescreen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task_bar.allocate_target(index=3)&amp;#10;task_bar.show()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="continueRoutine = task_bar.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="notes_code_homescreen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="notes_mouse_homescreen" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="notes_mouse_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="notes_mouse_movement_homescreen," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="notes_textbox_homescreen" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="notes_textbox_homescreen" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Open &lt;i&gt;{}&lt;/i&gt; on the task bar&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="notes_repeat">
      <RoutineSettingsComponent name="notes_repeat" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="notes_repeat" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="notes_repeat_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;split_view_editor.allocate_target()&amp;#10;base_window.show()&amp;#10;task_bar.show()&amp;#10;split_view_editor.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;base_window.update()&amp;#10;continueRoutine = split_view_editor.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="split_view_editor.log()&amp;#10;print(split_view_editor.notes_repeat_source.text, split_view_editor.notes_repeat_target.text)&amp;#10;split_view_editor.hide()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="notes_repeat_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="notes_repeat_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="notes_repeat_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please repeat the content on the right as it is shown on the left pane&quot;.format()" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <KeyboardComponent name="notes_repeat_keyboard" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="notes_repeat_keyboard" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="mail_homescreen">
      <RoutineSettingsComponent name="mail_homescreen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="mail_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="mail_code_homescreen" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="task_bar.allocate_target(index=2)&amp;#10;task_bar.show()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="continueRoutine = task_bar.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mail_code_homescreen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mail_mouse_homescreen" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mail_mouse_homescreen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="mail_mouse_movement_homescreen," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="mail_textbox_homescreen" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="mail_textbox_homescreen" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Wait for &lt;i&gt;{} Notification&lt;/i&gt;&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="mail_notification">
      <RoutineSettingsComponent name="mail_notification" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="mail_notification" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="mail_notification_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="notification.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;continueRoutine = notification.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="notification.hide()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mail_notification_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mail_notification_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mail_notification_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="every frame" valType="str" updates="None" name="saveMouseState"/>
        <Param val="mail_notification_mouse_movement," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextboxComponent name="mail_notification_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="mail_notification_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Click on the &lt;i&gt;{} Notification Popup&lt;/i&gt;&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
    </Routine>
    <Routine name="mail_content">
      <RoutineSettingsComponent name="mail_content" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="white" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="mail_content" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="mail_content_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ICON_SIZE = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_window.update_title(task_bar.target_name)&amp;#10;single_view_editor.allocate_target()&amp;#10;base_window.show()&amp;#10;single_view_editor.show()&amp;#10;task_bar.show()&amp;#10;&amp;#10;win.winHandle.activate()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="base_window.update()&amp;#10;task_bar.update()&amp;#10;continueRoutine = single_view_editor.update()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="single_view_editor.log()&amp;#10;single_view_editor.hide()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mail_content_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="mail_content_textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="mail_content_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, 1.0 - FONT_SIZE / 2)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, FONT_SIZE)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Please complete the &lt;i&gt;{}&lt;/i&gt;&quot;.format(task_bar.target_name)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <KeyboardComponent name="mail_content_user_key_release" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="mail_content_user_key_release" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="experiment_end">
      <RoutineSettingsComponent name="experiment_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="experiment_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="experiment_end_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="experiment_end_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of Experiment&amp;#10;&amp;#10;&amp;#10;Thank you very much for your participation!&amp;#10;&amp;#10;press any key to exit..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="experiment_end_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="experiment_end_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <KeyboardComponent name="experiment_end_key" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="experiment_end_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="experiment_start">
      <RoutineSettingsComponent name="experiment_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="experiment_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="experiment_start_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="event_timer = EventTimer()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="experiment_start_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="experiment_start_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="experiment_start_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Start of Experiment&amp;#10;&amp;#10;&amp;#10;Welcome to this exciting journey, please try to finish all the tasks as fast as you can!&amp;#10;&amp;#10;press any key to start..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="experiment_start_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="experiment_start_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <KeyboardComponent name="experiment_start_key" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="experiment_start_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="calibration_start">
      <RoutineSettingsComponent name="calibration_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="calibration_start_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_start_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Calibration Stage&amp;#10;&amp;#10;&amp;#10;We will run through a few tests to ensure you the best experience.&amp;#10;&amp;#10;press any key to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="calibration_start_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="calibration_start_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <KeyboardComponent name="calibration_start_key" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="calibration_start_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="calibration_end">
      <RoutineSettingsComponent name="calibration_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="calibration_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(personalized_settings)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for key_name, key_value in personalized_settings.items():&amp;#10;    thisExp.addData(key_name, key_value)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="calibration_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="calibration_end_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_end_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of Calibration&amp;#10;&amp;#10;&amp;#10;Your personalized settings have been applied.&amp;#10;&amp;#10;press any key to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="calibration_end_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="calibration_end_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <KeyboardComponent name="calibration_end_key" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="calibration_end_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="calibration_end_debug_text" plugin="None">
        <Param val="gray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_end_debug_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Typing Speed (char/sec): &quot; + &quot;{:.2f}&quot;.format(personalized_settings[&quot;typing_speed&quot;])" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="calibration_typing">
      <RoutineSettingsComponent name="calibration_typing" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_typing" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="calibration_typing_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="stylizer.reset(style='windows')&amp;#10;base_window.reset()&amp;#10;base_window.update_title(&quot;Typing Speed Test&quot;)&amp;#10;single_view_editor.allocate_test_target()&amp;#10;task_bar.reset()&amp;#10;task_bar.show()&amp;#10;base_window.show()&amp;#10;single_view_editor.show()&amp;#10;&amp;#10;win.winHandle.activate()&amp;#10;&amp;#10;calibration_typing_clock = core.MonotonicClock()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="base_window.update()&amp;#10;task_bar.update()&amp;#10;continueRoutine = single_view_editor.update()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="single_view_editor.log()&amp;#10;personalized_settings[&quot;typing_speed&quot;] = len(single_view_editor.TARGET) / calibration_typing_clock.getTime()&amp;#10;hide_all()&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="calibration_typing_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="calibration_typing_key" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="calibration_typing_key" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="calibration_typing_start">
      <RoutineSettingsComponent name="calibration_typing_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_typing_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="calibration_typing_start_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_typing_start_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Typing Calibration&amp;#10;&amp;#10;&amp;#10;You will be asked to enter sentences consisting of random words, with a period &quot;.&quot; in the end. Your mouse will be disabled for this task. During typing, if you find any previous errors in typing that happened for more than two words before, you should ignore it and continue typing instead of trying to fix it. The task should complete automatically once you have finished typing. If not, you may hit SPACE multiple times to continue.&amp;#10;&amp;#10;press ENTER to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="calibration_typing_start_key" plugin="None">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="calibration_typing_start_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="calibration_appearance_windows">
      <RoutineSettingsComponent name="calibration_appearance_windows" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_appearance_windows" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="calibration_appearance_windows_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="stylizer.reset(style='windows')&amp;#10;base_window.reset()&amp;#10;base_window.allocate_target(index=0)&amp;#10;base_window.update_title(&quot;Appearance (Windows Style)&quot;)&amp;#10;task_bar.reset()&amp;#10;task_bar.show()&amp;#10;base_window.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;continueRoutine = base_window.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="base_window.log()&amp;#10;stylizer.log()&amp;#10;hide_all()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="calibration_appearance_windows_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="calibration_appearance_windows_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_appearance_windows_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Introduction to System Appearance&amp;#10;&amp;#10;&amp;#10;We will randomize system appearance throughout the experiment. With Windows style layout, title bar buttons are presented on the top-right corner of the window. On the task bar, we have applications named &quot;File Manager&quot;, &quot;Browser&quot;, &quot;Mail&quot;, &quot;Document&quot; and &quot;Trash&quot;, in the order of their appearance from left to right.&amp;#10;&amp;#10;click CLOSE button on the title bar to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="calibration_appearance_mac">
      <RoutineSettingsComponent name="calibration_appearance_mac" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_appearance_mac" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="calibration_appearance_mac_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="stylizer.reset(style='mac')&amp;#10;base_window.reset()&amp;#10;base_window.allocate_target(index=0)&amp;#10;base_window.update_title(&quot;Appearance (macOS Style)&quot;)&amp;#10;task_bar.reset()&amp;#10;task_bar.show()&amp;#10;base_window.show()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="task_bar.update()&amp;#10;continueRoutine = base_window.update()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="base_window.log()&amp;#10;stylizer.log()&amp;#10;hide_all()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="calibration_appearance_mac_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="calibration_appearance_mac_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_appearance_mac_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Introduction to System Appearance&amp;#10;&amp;#10;&amp;#10;With macOS style layout, title bar buttons are presented on the top-left corner of the window. On the task bar, we have applications named &quot;File Manager&quot;, &quot;Browser&quot;, &quot;Mail&quot;, &quot;Document&quot; and &quot;Trash&quot;, in the order of their appearance from left to right.&amp;#10;&amp;#10;click CLOSE button on the title bar to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="calibration_mouse_start">
      <RoutineSettingsComponent name="calibration_mouse_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="calibration_mouse_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="calibration_mouse_start_text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_mouse_start_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Mouse Calibration&amp;#10;&amp;#10;&amp;#10;You will be instructed to move the mouse cursor along the path of a red glowing symbol, following its trace as accurately as possible.&amp;#10;&amp;#10;click your mouse to continue..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="calibration_mouse_start_mouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="calibration_mouse_start_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="calibration_mouse_start_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="calibration_mouse_start_mouse.setPos([0, 0])" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="calibration_mouse_start_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="definition"/>
    <Routine name="calibration_start"/>
    <Routine name="calibration_appearance_windows"/>
    <Routine name="calibration_appearance_mac"/>
    <Routine name="calibration_typing_start"/>
    <Routine name="calibration_typing"/>
    <Routine name="calibration_end"/>
    <Routine name="experiment_start"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="60" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="style_randomizer"/>
    <LoopInitiator loopType="TrialHandler" name="tasks">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="tasks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="mail">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('MAIL')" valType="num"/>
      <Param name="name" updates="None" val="mail" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="mail_homescreen"/>
    <Routine name="mail_notification"/>
    <Routine name="mail_content"/>
    <Routine name="window_close"/>
    <LoopTerminator name="mail"/>
    <LoopInitiator loopType="TrialHandler" name="file_manager_dragging_task">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('FILE_DRAGGING')" valType="num"/>
      <Param name="name" updates="None" val="file_manager_dragging_task" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="file_manager_homescreen"/>
    <LoopInitiator loopType="TrialHandler" name="file_dragging">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="20" valType="num"/>
      <Param name="name" updates="None" val="file_dragging" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="file_manager_dragging"/>
    <LoopTerminator name="file_dragging"/>
    <Routine name="window_close"/>
    <LoopTerminator name="file_manager_dragging_task"/>
    <LoopInitiator loopType="TrialHandler" name="file_manager_opening_task">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('FILE_OPENING')" valType="num"/>
      <Param name="name" updates="None" val="file_manager_opening_task" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="file_manager_homescreen"/>
    <LoopInitiator loopType="TrialHandler" name="file_opening">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="30" valType="num"/>
      <Param name="name" updates="None" val="file_opening" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="file_manager_opening"/>
    <LoopTerminator name="file_opening"/>
    <Routine name="window_close"/>
    <LoopTerminator name="file_manager_opening_task"/>
    <LoopInitiator loopType="TrialHandler" name="trash_bin">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('TRASH_BIN')" valType="num"/>
      <Param name="name" updates="None" val="trash_bin" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trash_bin_homescreen"/>
    <Routine name="trash_bin_select"/>
    <Routine name="trash_bin_confirm"/>
    <Routine name="window_close"/>
    <LoopTerminator name="trash_bin"/>
    <LoopInitiator loopType="TrialHandler" name="notes">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('NOTES')" valType="num"/>
      <Param name="name" updates="None" val="notes" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="notes_homescreen"/>
    <Routine name="notes_repeat"/>
    <Routine name="window_close"/>
    <LoopTerminator name="notes"/>
    <LoopInitiator loopType="TrialHandler" name="browser">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="event_timer.should_show('BROWSER')" valType="num"/>
      <Param name="name" updates="None" val="browser" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="browser_homescreen"/>
    <Routine name="browser_navigation"/>
    <Routine name="browser_content"/>
    <Routine name="window_close"/>
    <LoopTerminator name="browser"/>
    <LoopTerminator name="tasks"/>
    <LoopTerminator name="trials"/>
    <Routine name="experiment_end"/>
  </Flow>
</PsychoPy2experiment>
